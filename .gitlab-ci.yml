default:
  # TODO: Move this to the GitLab Runner config
  image: quay-registry-quay-quay-enterprise.apps.hub.taco.moe/hello-world/ci-tools:latest
  tags:
    - $RUNNER_TAG

stages:
  - build-image
  - scan-image
  - rollout

variables:
  # Name of the application. This must be unique!
  APP_NAME: hello-world

  # IMAGE_NAME should not have a tag at the end! That will be detemined based on branch
  IMAGE_NAME: quay-registry-quay-quay-enterprise.apps.hub.taco.moe/hello-world/hello-world

  # TODO: Move this to the GitLab Runner config
  ROX_CENTRAL_ADDRESS: central-stackrox.apps.hub.taco.moe:443

# NOTE: I don't have a test cluster so I'm deploying dev/test1 to dev cluster
# and test2/stage to stage cluster.
workflow:
  rules:
    - if: $CI_COMMIT_BRANCH == 'dev'
      variables:
        BUILD_CONFIG_NAME: "${APP_NAME}-dev"
        DEPLOYMENT_NAME: "${APP_NAME}-dev"
        DEPLOYMENT_NAMESPACE: "${APP_NAME}-dev"
        IMAGE_TAG: dev
        RUNNER_TAG: dev
    - if: $CI_COMMIT_BRANCH == 'test1'
      variables:
        BUILD_CONFIG_NAME: "${APP_NAME}-test1"
        DEPLOYMENT_NAME: "${APP_NAME}-test1"
        DEPLOYMENT_NAMESPACE: "${APP_NAME}-test1"
        IMAGE_TAG: test1
        RUNNER_TAG: dev
    - if: $CI_COMMIT_BRANCH == 'test2'
      variables:
        BUILD_CONFIG_NAME: "${APP_NAME}-test2"
        DEPLOYMENT_NAME: "${APP_NAME}-test2"
        DEPLOYMENT_NAMESPACE: "${APP_NAME}-test2"
        IMAGE_TAG: test2
        RUNNER_TAG: stage
    - if: $CI_COMMIT_BRANCH == 'main'
      variables:
        BUILD_CONFIG_NAME: "${APP_NAME}-${CI_COMMIT_SHORT_SHA}"
        IMAGE_TAG: "$CI_COMMIT_SHORT_SHA"
        RUNNER_TAG: stage
    - when: never # Skip running pipeline when none of the "if" statements are true

build-image:
  script:
    -|
      oc apply -f - << EOF
        apiVersion: build.openshift.io/v1
        kind: BuildConfig
        metadata:
          name: "$BUILD_CONFIG_NAME"
          namespace: gitlab-runner
        spec:
          failedBuildsHistoryLimit: 5
          output:
            pushSecret:
              name: push-secret # This needs to be created
            to:
              kind: DockerImage
              name: "${IMAGE_NAME}:${IMAGE_TAG}"
          runPolicy: Serial
          source:
            git:
              ref: $CI_COMMIT_BRANCH
              uri: "${CI_PROJECT_URL}.git"
            type: Git
          strategy:
            sourceStrategy:
              from:
                kind: ImageStreamTag
                name: java:openjdk-17-ubi8
                namespace: openshift
            type: Source
          successfulBuildsHistoryLimit: 5
      EOF
    - oc start-build "$BUILD_CONFIG_NAME" --follow --wait
  stage: build-image

scan-image:
  script:
    - roxctl -e "$ROX_CENTRAL_ADDRESS" image check --image "${IMAGE_NAME}:${IMAGE_TAG}" --insecure-skip-tls-verify --output json
    - roxctl -e "$ROX_CENTRAL_ADDRESS" image scan --image "${IMAGE_NAME}:${IMAGE_TAG}" --insecure-skip-tls-verify --output json > scan.json
    - jq -r '.result.summary' scan.json
  stage: scan-image
  allow_failure: true # TODO: Remove this; Current image has fixable vulns

rollout:
  script:
    - oc rollout restart "deployment/${DEPLOYMENT_NAME}" -n "$DEPLOYMENT_NAMESPACE"
  stage: rollout
